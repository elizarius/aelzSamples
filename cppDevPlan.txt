C++ development plan
--------------------

1.  Get ctag working with vim / C++ code

2.  ES (elementary sample)  threading, C++ 11, 14, or 17 plus structured reading / writing
    to file , based on threadFilter example

3.  ES: Other comments from  threadFilter

4   ES: multiple threads C

5   ES: Double linked list C++

6.  ES:  Binary three C++ / C

7.  Refresh current socket example (C++) in terms of C++14

8.  ES: Pipe, look existing C/C++. Read TCP interprocess communication book, as start point

9.  ES:  Semaphor simple example C++

10. ES: Mutex lock / unlock

11. ES:  Fork, simple example  look existing C/C++, C++14
    Read TCP interprocess communication book, as start point

12. Singlethon with threads , see and re-implement Baha example in C++14 style

13.  ES: queue impl

14   Threading models, read about exisitng , implement something different than posix threads

15. CLI simple elementary implementation, or reuse existing: getlongopt

16  Look StatePattern , because useful for state machine

17. Implement different type client / server applications as framework, f.i  piped, forked
    - Simple Makefiles tool chain
    - implement socket class as separate folder
    - refactor udsServer to use socket class
    - implement  client  sending structured message to server instead of simple hello
    - implement raw socket
    - look how socket container implement in C++ 11 standard
------------------------------------------


8   Threading models, read about exisitng , implement something different than posix threads

12  See other useful examples in SS_Commutil/test
13  Factory method , including getopt_long as input and ""Handlers"" singleton as storage.
14  Look ""protclient"" Antti's example , as alternative ""getopt_long"

16  Coding style guide , read carefully , check questionable proposals
17. BoostCpp  , read , execute  useful examples
18  Event management framework , read and run examples : sockets etc .
19  Abstact Factory , read and implement useful example
20  Template method , implement to myCpp samples
21  Read available books , execute some examples from them ": ScottMayers, Q&A old course , stl maps etc"
22  Find book : refactoring for old systems  , read and execute examples"
24  Advanced C++ technik , book in trainings/CPP"Read  , check and implement several examples
2   Find useful MFP C examples

DONE
----
0.1 Sort C/C++ into separate folders
0.2 Run unclear C examples from 00_basicC
0.3 Find other C examples, analyse, copy useful to 00_basicC: IP
0.4 Pass through myCpp samples. Implement interested not working, f.i change makefiles
0.5 Go throw old Brain bench tests , implement quiestionable samples
0.6 Install IDE: CodeBlocks

1.1 Implement  udsServer / client appl
