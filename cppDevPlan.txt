C++ development plan
---------------------

00. Demo application, demonstrating possible elementary samples usage:
    - abstract cli class
    - container with handlers,where key is cli option,
    - cli hanlder includes virtual usage function
    - initiator, loading into container handlers (f.i. codility handlers)
    - demonstrator, running different functions
    - demonstrator should print file name, location and short description,
      what done by function.


01. DB handler to communicate to postgre container:

    - open connection                       Done
    - create  DBConnection class            Done

    - create table  from Cpp appl

    - create X relations according to referenced schema (thread_1)
    - add Y records to relations (thread_2)
    - calculate performance (time to add)

    - add cli handler

    - get Y records from DBs (thread_3)
    - calculate performance (time to get)

    - modify Y records in  DBs (thread_4)
    - calculate performance (time to modify)

    - delete Y records from DBs (thread_5)
    - calculate performance (time to delete)


10. ES: Introduce own signal handler in addition to  exit(1). It will catch
signals like "Ctrl-Z, Ctrl-C" and gracefully shut down
process(with "***Finished" message)

17. Implement different type client / server applications as framework, f.i  piped, forked
    - Simple Makefiles tool chain
    - implement socket class as separate folder
    - refactor udsServer to use socket class
    - implement  client  sending structured message to server instead of simple hello
    - implement raw socket
    - look how socket container implement in C++ 11 standard
------------------------------------------

13.  Introduce advanced messaging between reader / filter threads., f.i. pipe based or socket based.
     It could make system more reliable (and difficult) instead of using one inputQueue, that in fact is shared  resource.
     That require more investigation.

12  See other useful examples in util/test
13  Factory method , including getopt_long as input and ""Handlers"" singleton as storage.
19  Abstact Factory , read and implement useful example
20  Template method , implement to myCpp samples
24  Advanced C++ technik , book in trainings/CPP"Read  , check and implement several examples


DONE
----
00. Singlethon with mutex, see in C++11 style

