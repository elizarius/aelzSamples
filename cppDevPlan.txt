C++ development plan
---------------------

05. Double list: implement in C

06. ES:  Binary three C++ / C

12. Singlethon with threads, see and re-implement old  example in C++11 style



01. DB handler to communicate to postgre container:

    - open connection

    - create X data bases according to referenced schema (thread_1)
    - add Y records to DBs (thread_2)
    - calculate performance (time to add)


    - add cli handler

    - get Y records from DBs (thread_3)
    - calculate performance (time to get)

    - modify Y records in  DBs (thread_4)
    - calculate performance (time to modify)

    - delete Y records from DBs (thread_5)
    - calculate performance (time to delete)


10. ES: Introduce own signal handler in addition to  exit(1). It will catch
signals like "Ctrl-Z, Ctrl-C" and gracefully shut down
process(with "***Finished" message)

17. Implement different type client / server applications as framework, f.i  piped, forked
    - Simple Makefiles tool chain
    - implement socket class as separate folder
    - refactor udsServer to use socket class
    - implement  client  sending structured message to server instead of simple hello
    - implement raw socket
    - look how socket container implement in C++ 11 standard
------------------------------------------

13.  Introduce advanced messaging between reader / filter threads., f.i. pipe based or socket based.
     It could make system more reliable (and difficult) instead of using one inputQueue, that in fact is shared  resource.
     That require more investigation.

12  See other useful examples in util/test
13  Factory method , including getopt_long as input and ""Handlers"" singleton as storage.

16  Coding style guide , read carefully , check questionable proposals
17. BoostCpp  , read , execute  useful examples
18  Event management framework , read and run examples : sockets etc .
19  Abstact Factory , read and implement useful example
20  Template method , implement to myCpp samples
21  Read available books , execute some examples from them ": ScottMayers, Q&A old course , stl maps etc"
22  Find book : refactoring for old systems  , read and execute examples"
24  Advanced C++ technik , book in trainings/CPP"Read  , check and implement several examples


DONE
----
0.1 Sort C/C++ into separate folders
0.2 Run unclear C examples from 00_basicC
0.3 Find other C examples, analyse, copy useful to 00_basicC: IP
0.4 Pass through myCpp samples. Implement interested not working, f.i change makefiles
0.5 Go throw old Brain bench tests , implement quiestionable samples
0.6 Install IDE: CodeBlocks
1.1 Implement  udsServer / client appl

1.  Get ctag working with vim / C++ code
2.  ES (elementary sample)  threading, C++ 11, 14, or 17 plus structured reading / writing
    to file , based on threadFilter example
10. ES: Mutex lock / unlock
1.  ES: conditional variable  // AELZ_01 see example in Cpp.com
9.  ES:  Semaphore simple example C++.
    AELZ_02 combination mutex / condition_variable should be used instead.
    See example in Cpp.com

4   ES: multiple threads C
2. simple Cpp samples , pass through, add to repo
3.  ESS: check reading from stdin in different forms: see threads.cpp / factory_method_1.cpp
5   ES: Double linked list C++, single linked list
15. CLI simple elementary implementations
16. Read Scott Mayers about difference between STL containers
11. ES:  Fork, simple example  look existing C/C++
7.  Refresh current socket example (C++) in terms of C++11
16  StatePattern, because useful for state machine

04. Double list (chain): chain rewrite with list pattern
03. Double list: chain rewrite without container

